package com.bupt.core.dao;

import com.bupt.core.entity.Cart;
import com.bupt.core.entity.CartExample;
import java.util.List;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Component;

@Component
public interface CartMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mmall_cart
     *
     * @mbg.generated Wed Apr 29 15:01:11 CST 2020
     */
    long countByExample(CartExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mmall_cart
     *
     * @mbg.generated Wed Apr 29 15:01:11 CST 2020
     */
    int deleteByExample(CartExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mmall_cart
     *
     * @mbg.generated Wed Apr 29 15:01:11 CST 2020
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mmall_cart
     *
     * @mbg.generated Wed Apr 29 15:01:11 CST 2020
     */
    int insert(Cart record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mmall_cart
     *
     * @mbg.generated Wed Apr 29 15:01:11 CST 2020
     */
    int insertSelective(Cart record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mmall_cart
     *
     * @mbg.generated Wed Apr 29 15:01:11 CST 2020
     */
    List<Cart> selectByExample(CartExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mmall_cart
     *
     * @mbg.generated Wed Apr 29 15:01:11 CST 2020
     */
    Cart selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mmall_cart
     *
     * @mbg.generated Wed Apr 29 15:01:11 CST 2020
     */
    int updateByExampleSelective(@Param("record") Cart record, @Param("example") CartExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mmall_cart
     *
     * @mbg.generated Wed Apr 29 15:01:11 CST 2020
     */
    int updateByExample(@Param("record") Cart record, @Param("example") CartExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mmall_cart
     *
     * @mbg.generated Wed Apr 29 15:01:11 CST 2020
     */
    int updateByPrimaryKeySelective(Cart record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mmall_cart
     *
     * @mbg.generated Wed Apr 29 15:01:11 CST 2020
     */
    int updateByPrimaryKey(Cart record);

    /**
     * 查询某个用户购物车中的某个商品
     * @param userId
     * @param productId
     * @return
     */
    Cart selectCartByUserIdProductId(@Param("userId") Integer userId, @Param("productId") Integer productId);

    /**
     * 通过userId查询购物车中的商品列表
     * @param userId
     * @return
     */
    List<Cart> selectCartByUserId(Integer userId);

    /**
     * 查询改用户的购物车中商品是否全选
     * @param userId
     * @return
     */
    int selectCartProductCheckStatusByUserId(Integer userId);

    /**
     * 根据用户id和id集合删除购物车中的商品
     * @param userId
     * @param productIdList
     * @return
     */
    int deleteByUserIdProductIds(@Param("userId") Integer userId, @Param("productIdList") List<String> productIdList);

    /**
     * 购物车中商品的全选和全不选
     * @param userId
     * @param check
     * @return
     */
    int checkedOrUnCheckedProduct(@Param("userId") Integer userId, @Param("check") Boolean check);

    /**
     * 设置购物车中的单一商品是否被选中
     * @param userId
     * @param productId
     * @param check
     * @return
     */
    int setProductCheckStatus(@Param("userId") Integer userId, @Param("productId") Integer productId, @Param("check") Boolean check);

    /**
     * 获取用户购物车中的商品数量
     * @param userId
     * @return
     */
    int selectCartProductCount(Integer userId);

    /**
     * 获取该用户购物车中已勾选的物品
     * @param userId
     * @return
     */
    List<Cart> selectCheckedCartByUserId(Integer userId);
}
