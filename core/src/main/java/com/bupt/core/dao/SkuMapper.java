package com.bupt.core.dao;

import com.bupt.core.entity.Sku;
import com.bupt.core.entity.SkuExample;
import java.util.List;

import com.bupt.core.vo.CategoryVo;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Component;

@Component
public interface SkuMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    long countByExample(SkuExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    int deleteByExample(SkuExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    int insert(Sku record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    int insertSelective(Sku record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    List<Sku> selectByExampleWithBLOBs(SkuExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    List<Sku> selectByExample(SkuExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    Sku selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    int updateByExampleSelective(@Param("record") Sku record, @Param("example") SkuExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    int updateByExampleWithBLOBs(@Param("record") Sku record, @Param("example") SkuExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    int updateByExample(@Param("record") Sku record, @Param("example") SkuExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    int updateByPrimaryKeySelective(Sku record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    int updateByPrimaryKeyWithBLOBs(Sku record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sku_use
     *
     * @mbg.generated Thu Jul 02 14:41:55 CST 2020
     */
    int updateByPrimaryKey(Sku record);

    /**
     * 查询商品列表
     * @return
     */
    List<Sku> selectSkuList();

    /**
     * 根据商品名称和所属分类查询商品
     * @param name
     * @param categoryIdList
     * @return
     */
    List<Sku> selectSkuByNameAndCategoryIds(@Param("name") String name, @Param("categoryIdList") List<CategoryVo> categoryIdList);

    /**
     * 普通用户根据关键词查询所有在售状态的商品
     * @param keyworld
     * @return
     */
    List<Sku> customerSelectSku(String keyworld);

    List<Sku> testResolve();
}
